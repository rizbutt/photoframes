{"ast":null,"code":"var _jsxFileName = \"D:\\\\pf-ecom\\\\pf-front\\\\components\\\\customizer\\\\theme-settings.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from \"react\";\nimport Link from \"next/link\";\nimport SettingContext from \"../../helpers/theme-setting/SettingContext\";\nimport { ToastContainer } from \"react-toastify\";\nimport { config } from \"./config.json\";\nimport { Media, Col, Row, Modal, ModalHeader, ModalBody, ModalFooter, Collapse } from \"reactstrap\";\nimport { database } from \"firebase\";\n\nconst ThemeSettings = () => {\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState();\n  const {\n    0: collapse,\n    1: setCollapse\n  } = useState(0);\n  const context = useContext(SettingContext);\n  const {\n    0: themeLayout,\n    1: setThemeLayout\n  } = useState(false);\n  const layoutType = context.layoutFun;\n  const layoutColorFunc = context.layoutColorFun;\n  const layoutState = context.state;\n  const {\n    0: modal,\n    1: setModal\n  } = useState(false);\n\n  const toggle = () => setModal(!modal);\n  /*=====================\r\n     Tap on Top\r\n     ==========================*/\n\n\n  useEffect(() => {\n    if (config.layout_version && config.layout_type) {\n      document.body.className = `${config.layout_version}  ${config.layout_type}`;\n    }\n\n    if (localStorage.getItem(\"color\")) {\n      document.documentElement.style.setProperty(\"--theme-deafult\", localStorage.getItem(\"color\"));\n    }\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  const handleScroll = () => {\n    if (false) {\n      if (document.documentElement.scrollTop > 600) {\n        document.querySelector(\".tap-top\").style = \"display: block\";\n      } else {\n        document.querySelector(\".tap-top\").style = \"display: none\";\n      }\n    }\n  };\n\n  const openSetting = () => {\n    if (false) {\n      document.getElementById(\"setting_box\").classList.add(\"open-setting\");\n      document.getElementById(\"setting-icon\").classList.add(\"open-icon\");\n    }\n  };\n\n  const closeSetting = () => {\n    if (false) {\n      document.getElementById(\"setting_box\").classList.remove(\"open-setting\");\n      document.getElementById(\"setting-icon\").classList.remove(\"open-icon\");\n    }\n  };\n\n  const changeThemeLayout = () => {\n    setThemeLayout(!themeLayout);\n  };\n\n  if (themeLayout) {\n    if (false) {\n      document.body.classList.add(\"dark\");\n      config.layout_version = \"dark\";\n    }\n  } else {\n    if (false) {\n      document.body.classList.remove(\"dark\");\n      config.layout_version = \"light\";\n    }\n  }\n\n  const MasterComponent = ({\n    ribon,\n    bg,\n    name,\n    link,\n    btnName\n  }) => {\n    return __jsx(Col, {\n      sm: \"6\",\n      className: \"text-center demo-effects\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      className: \"set-position\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: `layout-container ${bg}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, ribon ? __jsx(\"div\", {\n      className: \"ribbon-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }, \"n\"), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, \"e\"), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"w\")) : \"\"), __jsx(\"div\", {\n      className: \"demo-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, name), __jsx(\"div\", {\n      className: \"btn-group demo-btn\",\n      role: \"group\",\n      \"aria-label\": \"Basic example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: link,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 15\n      }\n    }, __jsx(\"a\", {\n      className: \"btn new-tab-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, btnName, \" \"))))));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }\n  }, __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ThemeSettings;","map":{"version":3,"sources":["D:/pf-ecom/pf-front/components/customizer/theme-settings.js"],"names":["React","useEffect","useState","useContext","Link","SettingContext","ToastContainer","config","Media","Col","Row","Modal","ModalHeader","ModalBody","ModalFooter","Collapse","database","ThemeSettings","isOpen","setIsOpen","collapse","setCollapse","context","themeLayout","setThemeLayout","layoutType","layoutFun","layoutColorFunc","layoutColorFun","layoutState","state","modal","setModal","toggle","layout_version","layout_type","document","body","className","localStorage","getItem","documentElement","style","setProperty","window","addEventListener","handleScroll","removeEventListener","scrollTop","querySelector","openSetting","getElementById","classList","add","closeSetting","remove","changeThemeLayout","MasterComponent","ribon","bg","name","link","btnName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\r\nimport Link from \"next/link\";\r\nimport SettingContext from \"../../helpers/theme-setting/SettingContext\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport { config } from \"./config.json\";\r\nimport {\r\n  Media,\r\n  Col,\r\n  Row,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Collapse,\r\n} from \"reactstrap\";\r\nimport { database } from \"firebase\";\r\n\r\nconst ThemeSettings = () => {\r\n  const [isOpen, setIsOpen] = useState();\r\n  const [collapse, setCollapse] = useState(0);\r\n  const context = useContext(SettingContext);\r\n  const [themeLayout, setThemeLayout] = useState(false);\r\n  const layoutType = context.layoutFun;\r\n  const layoutColorFunc = context.layoutColorFun;\r\n  const layoutState = context.state;\r\n  const [modal, setModal] = useState(false);\r\n  const toggle = () => setModal(!modal);\r\n\r\n  /*=====================\r\n     Tap on Top\r\n     ==========================*/\r\n  useEffect(() => {\r\n    if (config.layout_version && config.layout_type) {\r\n      document.body.className = `${config.layout_version}  ${config.layout_type}`;\r\n    }\r\n\r\n    if (localStorage.getItem(\"color\")) {\r\n      document.documentElement.style.setProperty(\r\n        \"--theme-deafult\",\r\n        localStorage.getItem(\"color\")\r\n      );\r\n    }\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const handleScroll = () => {\r\n    if (process.browser) {\r\n      if (document.documentElement.scrollTop > 600) {\r\n        document.querySelector(\".tap-top\").style = \"display: block\";\r\n      } else {\r\n        document.querySelector(\".tap-top\").style = \"display: none\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const openSetting = () => {\r\n    if (process.browser) {\r\n      document.getElementById(\"setting_box\").classList.add(\"open-setting\");\r\n      document.getElementById(\"setting-icon\").classList.add(\"open-icon\");\r\n    }\r\n  };\r\n\r\n  const closeSetting = () => {\r\n    if (process.browser) {\r\n      document.getElementById(\"setting_box\").classList.remove(\"open-setting\");\r\n      document.getElementById(\"setting-icon\").classList.remove(\"open-icon\");\r\n    }\r\n  };\r\n\r\n  const changeThemeLayout = () => {\r\n    setThemeLayout(!themeLayout);\r\n  };\r\n\r\n  if (themeLayout) {\r\n    if (process.browser) {\r\n      document.body.classList.add(\"dark\");\r\n      config.layout_version = \"dark\";\r\n    }\r\n  } else {\r\n    if (process.browser) {\r\n      document.body.classList.remove(\"dark\");\r\n      config.layout_version = \"light\";\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const MasterComponent = ({ ribon, bg, name, link, btnName }) => {\r\n    return (\r\n      <Col sm=\"6\" className=\"text-center demo-effects\">\r\n        <div className=\"set-position\">\r\n          <div className={`layout-container ${bg}`}>\r\n            {ribon ? (\r\n              <div className=\"ribbon-1\">\r\n                <span>n</span>\r\n                <span>e</span>\r\n                <span>w</span>\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </div>\r\n          <div className=\"demo-text\">\r\n            <h4>{name}</h4>\r\n            <div\r\n              className=\"btn-group demo-btn\"\r\n              role=\"group\"\r\n              aria-label=\"Basic example\"\r\n            >\r\n              <Link href={link}>\r\n                <a className=\"btn new-tab-btn\">{btnName} </a>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Col>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ThemeSettings;\r\n"]},"metadata":{},"sourceType":"module"}